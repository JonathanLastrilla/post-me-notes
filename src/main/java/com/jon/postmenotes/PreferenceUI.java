/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jon.postmenotes;

import com.jon.postmenotes.core.Preference;
import com.jon.postmenotes.core.PreferenceEvent;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.util.stream.Stream;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author jlastril
 */
public class PreferenceUI extends javax.swing.JFrame {

    static class ListItem {

        Font w;

        public ListItem(Font w) {
            this.w = w;
        }

        Font getFont() {
            return w;
        }

        @Override
        public String toString() {
            return w.getName();
        }

        @Override
        public boolean equals(Object obj) {            
            if (obj instanceof ListItem) {
                return ((ListItem) obj).w.getFontName().equals(w.getFontName());
            } else {
                return super.equals(obj);
            }
        }

        @Override
        public int hashCode() {
            return w.hashCode();
        }
        
        

    }

    /**
     * Creates new form Preferences
     */
    public PreferenceUI() {
        initComponents();
        setIconImage(Main.createImageIcon(Main.ICON_NAME, "").getImage());
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();

        DefaultComboBoxModel model = new DefaultComboBoxModel(Stream.of(ge.getAllFonts())
                .map(ListItem::new)
                .toArray());

        int fIdx = -1;
        for (int i = 0; i < model.getSize(); i++) {
            ListItem li = (ListItem) model.getElementAt(i);
            if(li.getFont().equals(((Font)pref.get(PreferenceEvent.FONT)))){                
                model.setSelectedItem(li);
                break;
            }
            
        }
        fontListJCB.setModel(model);        
        fontSizeJFTF.setText("" + pref.get(PreferenceEvent.FONT_SIZE));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fontListJCB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        fontSizeJFTF = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Font");

        fontListJCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        fontListJCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontListJCBActionPerformed(evt);
            }
        });

        jLabel2.setText("Size");

        fontSizeJFTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        fontSizeJFTF.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fontSizeJFTFPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fontListJCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fontSizeJFTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(312, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fontListJCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fontSizeJFTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(238, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fontListJCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontListJCBActionPerformed
        publisher.publish(PreferenceEvent.FONT, ((ListItem) fontListJCB.getModel().getSelectedItem()).getFont());
    }//GEN-LAST:event_fontListJCBActionPerformed

    private void fontSizeJFTFPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fontSizeJFTFPropertyChange
        if ("value".equals(evt.getPropertyName())) {
            try {
                publisher.publish(PreferenceEvent.FONT_SIZE, Integer.parseInt(fontSizeJFTF.getText()));
            } catch (NumberFormatException e) {

            }
        }
    }//GEN-LAST:event_fontSizeJFTFPropertyChange

    Preference pref = Preference.getInstance();
    Preference.Publisher publisher = new Preference.Publisher(pref);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> fontListJCB;
    private javax.swing.JFormattedTextField fontSizeJFTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
